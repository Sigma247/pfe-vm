{"remainingRequest":"/home/khalil/Projects/pfe_docker/pfe-vm/vuejs_frontend/node_modules/babel-loader/lib/index.js!/home/khalil/Projects/pfe_docker/pfe-vm/vuejs_frontend/src/store/modules/auth/actions.js","dependencies":[{"path":"/home/khalil/Projects/pfe_docker/pfe-vm/vuejs_frontend/src/store/modules/auth/actions.js","mtime":1633560350977},{"path":"/home/khalil/Projects/pfe_docker/pfe-vm/vuejs_frontend/node_modules/cache-loader/dist/cjs.js","mtime":1632090923690},{"path":"/home/khalil/Projects/pfe_docker/pfe-vm/vuejs_frontend/node_modules/babel-loader/lib/index.js","mtime":1632090923670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFVzZXIgZnJvbSAiLi4vLi4vLi4vYXBpcy91c2VyIjsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi8uLi9yb3V0ZXIvaW5kZXgiOyAvL0xvZ2luCgpleHBvcnQgdmFyIGxvZ2luID0gZnVuY3Rpb24gbG9naW4oX3JlZiwgY3JlZGVudGlhbHMpIHsKICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgY29tbWl0KCdTRVRfTE9BRElORycsIHRydWUpOwogIGNvbW1pdCgnQ0xFQVJfT1RIRVJfRVJST1JTJyk7CiAgVXNlci5sb2dpbihjcmVkZW50aWFscykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgIGNvbnNvbGUubG9nKCJJTiBBVVRIIik7CiAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKCiAgICBpZiAocmVzcG9uc2UuZGF0YS5hdXRoX3Rva2VuKSB7CiAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgcmVzcG9uc2UuZGF0YS5hdXRoX3Rva2VuKTsKICAgIH0KCiAgICBVc2VyLmF1dGgoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBjb21taXQoJ1NFVF9VU0VSREFUQScsIHJlc3BvbnNlLmRhdGEpOwogICAgICBjb21taXQoJ1NFVF9BVVRIRU5USUNBVEVEJywgdHJ1ZSk7CiAgICAgIGNvbW1pdCgnU0VUX0FVVEhfRVJST1JTJywgbnVsbCk7CiAgICAgIGNvbW1pdCgnU0VUX0xPQURJTkcnLCBmYWxzZSk7CiAgICAgIHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAnY3Jhd2xlcnNfbGlzdCcKICAgICAgfSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5sb2coIkF1dGggY2F0Y2ggPT0+IiArIGVycm9yKTsKICAgICAgZXJyb3IgPSBlcnJvciArICIuIENhbid0IGNvbm5lY3QgdG8gdGhlIHNlcnZlci4iOwogICAgICBjb21taXQoJ1NFVF9PVEhFUl9FUlJPUlMnLCBlcnJvcik7CiAgICAgIGNvbW1pdCgnU0VUX1VTRVJEQVRBJywgbnVsbCk7CiAgICAgIGNvbW1pdCgnU0VUX0FVVEhFTlRJQ0FURUQnLCBmYWxzZSk7CiAgICAgIGNvbW1pdCgnU0VUX0xPQURJTkcnLCBmYWxzZSk7CiAgICB9KTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIGlmIChlcnJvci5yZXNwb25zZSAhPSB1bmRlZmluZWQpIHsKICAgICAgdmFyIGVycm9yX2RhdGEgPSBlcnJvci5yZXNwb25zZS5kYXRhOwogICAgICBjb25zb2xlLmxvZyhlcnJvci5yZXNwb25zZS5zdGF0dXMpOwogICAgICBjb21taXQoJ1NFVF9VU0VSREFUQScsIG51bGwpOwogICAgICBjb21taXQoJ1NFVF9BVVRIRU5USUNBVEVEJywgZmFsc2UpOwogICAgICBjb21taXQoJ1NFVF9BVVRIX0VSUk9SUycsIGVycm9yX2RhdGEpOwoKICAgICAgaWYgKGVycm9yLnJlc3BvbnNlLnN0YXR1cyAhPSA0MDApIHsKICAgICAgICB2YXIgZXJyb3JfbWVzc2FnZSA9IGVycm9yLnJlc3BvbnNlLnN0YXR1cyArICIgIiArIGVycm9yLnJlc3BvbnNlLnN0YXR1c1RleHQ7CiAgICAgICAgY29tbWl0KCdTRVRfT1RIRVJfRVJST1JTJywgZXJyb3JfbWVzc2FnZSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGVycm9yID0gZXJyb3IgKyAiLiBDYW4ndCBjb25uZWN0IHRvIHRoZSBzZXJ2ZXIuIjsKICAgICAgY29tbWl0KCdTRVRfT1RIRVJfRVJST1JTJywgZXJyb3IpOwogICAgfQoKICAgIGNvbW1pdCgnU0VUX0xPQURJTkcnLCBmYWxzZSk7CiAgfSk7Cn07IC8vTG9nb3V0CgpleHBvcnQgdmFyIGxvZ291dCA9IGZ1bmN0aW9uIGxvZ291dChfcmVmMikgewogIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgY29tbWl0KCdTRVRfTE9HT1VUX0xPQURJTkcnLCB0cnVlKTsKICBjb21taXQoJ0NMRUFSX09USEVSX0VSUk9SUycpOwogIFVzZXIubG9nb3V0KCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICBjb21taXQoJ1NFVF9MT0dPVVRfTE9BRElORycsIGZhbHNlKTsKICAgIGNvbW1pdCgnU0VUX1VTRVJEQVRBJywgbnVsbCk7CiAgICBjb21taXQoJ1NFVF9UT0tFTicsICcnKTsKICAgIGNvbW1pdCgnU0VUX0FVVEhFTlRJQ0FURUQnLCBmYWxzZSk7CiAgICBjb21taXQoJ1NFVF9BVVRIX0VSUk9SUycsIG51bGwpOwogICAgcm91dGVyLnB1c2goewogICAgICBuYW1lOiAnbG9naW4nCiAgICB9KTsKICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIGNvbW1pdCgnU0VUX0xPR09VVF9MT0FESU5HJywgZmFsc2UpOwogICAgY29uc29sZS5sb2coJ0xPR09VVCBFcnIgPT0+JyArIGVycm9yKTsKCiAgICBpZiAoZXJyb3IucmVzcG9uc2UgIT0gdW5kZWZpbmVkKSB7CiAgICAgIHZhciBlcnJvcl9tZXNzYWdlID0gZXJyb3IucmVzcG9uc2Uuc3RhdHVzICsgIiAiICsgZXJyb3IucmVzcG9uc2Uuc3RhdHVzVGV4dCArICIuIENhbid0IGNvbm5lY3QgdG8gdGhlIHNlcnZlci4iOwogICAgICBjb21taXQoJ1NFVF9PVEhFUl9FUlJPUlMnLCBlcnJvcl9tZXNzYWdlKTsKICAgIH0gZWxzZSB7CiAgICAgIGVycm9yID0gZXJyb3IgKyAiLiBDYW4ndCBjb25uZWN0IHRvIHRoZSBzZXJ2ZXIuIjsKICAgICAgY29tbWl0KCdTRVRfT1RIRVJfRVJST1JTJywgZXJyb3IpOwogICAgfQogIH0pOwp9OwpleHBvcnQgdmFyIGlzX2F1dGhlbnRpY2F0ZWQgPSBmdW5jdGlvbiBpc19hdXRoZW50aWNhdGVkKF9yZWYzKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICBjb21taXQoJ0lTX0FVVEhFTlRJQ0FURUQnKTsKfTs="},{"version":3,"sources":["/home/khalil/Projects/pfe_docker/pfe-vm/vuejs_frontend/src/store/modules/auth/actions.js"],"names":["User","router","login","credentials","commit","then","response","console","log","data","auth_token","auth","push","name","catch","error","undefined","error_data","status","error_message","statusText","logout","is_authenticated"],"mappings":"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","sourcesContent":["import User from \"../../../apis/user\";\r\nimport router from \"../../../router/index\"\r\n\r\n//Login\r\nexport const login = ({ commit }, credentials) => {\r\n\r\n    commit('SET_LOADING',true)\r\n    commit('CLEAR_OTHER_ERRORS')\r\n\r\n    User.login(credentials).then(response => {\r\n        console.log(\"IN AUTH\")\r\n        console.log(response.data)\r\n        if(response.data.auth_token){\r\n            commit('SET_TOKEN', response.data.auth_token)\r\n        }\r\n        User.auth().then(response => {\r\n        commit('SET_USERDATA', response.data);\r\n        commit('SET_AUTHENTICATED',true);\r\n        commit('SET_AUTH_ERRORS',null);\r\n        commit('SET_LOADING',false)\r\n        router.push({ name: 'crawlers_list' });\r\n        }).catch((error) => {\r\n            console.log(\"Auth catch ==>\"+error)\r\n            error = error+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error)\r\n            commit('SET_USERDATA', null);\r\n            commit('SET_AUTHENTICATED',false);\r\n            commit('SET_LOADING',false);\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        if(error.response != undefined)\r\n        {\r\n            let error_data = error.response.data\r\n            console.log(error.response.status)\r\n            commit('SET_USERDATA', null);\r\n            commit('SET_AUTHENTICATED',false);\r\n            commit('SET_AUTH_ERRORS',error_data)\r\n            \r\n            if (error.response.status != 400) {\r\n                let error_message = error.response.status+\" \"+error.response.statusText\r\n                commit('SET_OTHER_ERRORS',error_message)\r\n            }\r\n        }\r\n        else\r\n        {\r\n            error = error+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error)\r\n        }\r\n        \r\n        \r\n        commit('SET_LOADING',false)\r\n    })\r\n    \r\n}\r\n\r\n//Logout\r\nexport const logout = ({commit}) => {\r\n    commit('SET_LOGOUT_LOADING',true)\r\n    commit('CLEAR_OTHER_ERRORS')\r\n    User.logout().then(() => {\r\n        commit('SET_LOGOUT_LOADING',false)\r\n        commit('SET_USERDATA', null);\r\n        commit('SET_TOKEN', '');\r\n        commit('SET_AUTHENTICATED', false);\r\n        commit('SET_AUTH_ERRORS',null);\r\n        router.push({ name: 'login' });\r\n    })\r\n    .catch((error) => {\r\n        commit('SET_LOGOUT_LOADING',false)\r\n        console.log('LOGOUT Err ==>' + error)\r\n        if(error.response != undefined)\r\n        {\r\n            let error_message = error.response.status+\" \"+error.response.statusText+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error_message)\r\n        }\r\n        else\r\n        {\r\n            error = error+\". Can't connect to the server.\"\r\n            commit('SET_OTHER_ERRORS',error)\r\n        }\r\n    })\r\n}\r\n\r\nexport const is_authenticated = ({commit}) => {\r\n    commit('IS_AUTHENTICATED')\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}]}